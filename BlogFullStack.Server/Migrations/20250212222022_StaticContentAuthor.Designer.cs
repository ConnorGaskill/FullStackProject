// <auto-generated />
using System;
using BlogFullStack.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogFullStack.Server.Migrations
{
    [DbContext(typeof(BlogFullStackServerContext))]
    [Migration("20250212222022_StaticContentAuthor")]
    partial class StaticContentAuthor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlogFullStack.Server.Models.BusinessContactDetails", b =>
                {
                    b.Property<int>("BusinessContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessContactID"));

                    b.Property<string>("BusinessAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessContactPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusinessContactID");

                    b.ToTable("BusinessContactDetails");

                    b.HasData(
                        new
                        {
                            BusinessContactID = 1,
                            BusinessAddress = "308 Negra Arroyo Lane, Albuquerque, New Mexico",
                            BusinessContactEmail = "VeryRealCo@RealMail.io",
                            BusinessContactPhoneNumber = "(360) 123-4567",
                            BusinessName = "ToastCo"
                        },
                        new
                        {
                            BusinessContactID = 2,
                            BusinessAddress = "600 Centralia College Blvd, Centralia, WA 98531",
                            BusinessContactEmail = "Wingdings@Wingmail.io",
                            BusinessContactPhoneNumber = "(360) 123-4567",
                            BusinessName = "Wingdings inc"
                        });
                });

            modelBuilder.Entity("BlogFullStack.Server.Models.DynamicContent", b =>
                {
                    b.Property<int>("DynamicContentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DynamicContentID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DynamicContentID");

                    b.ToTable("DynamicContent");

                    b.HasData(
                        new
                        {
                            DynamicContentID = 1,
                            Author = "Arial Hughman",
                            Body = "This is a post",
                            Content = "Really cool stuff",
                            CreatedDate = new DateTime(1999, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(1999, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test"
                        },
                        new
                        {
                            DynamicContentID = 2,
                            Author = "SHODAN",
                            Body = "Do not dawdle. I lust for my revenge.",
                            Content = "Really neat stuff",
                            CreatedDate = new DateTime(1999, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(1999, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test2"
                        });
                });

            modelBuilder.Entity("BlogFullStack.Server.Models.FeedbackData", b =>
                {
                    b.Property<int>("FeedBackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedBackID"));

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedbackEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeedBackID");

                    b.ToTable("FeedbackData");

                    b.HasData(
                        new
                        {
                            FeedBackID = 1,
                            Feedback = "I like toast",
                            FeedbackEmail = "RealGuy@RealMail.io"
                        },
                        new
                        {
                            FeedBackID = 2,
                            Feedback = "I'm somewhat partial to toast",
                            FeedbackEmail = "MildlyInterestingGuy@RealMail.io"
                        });
                });

            modelBuilder.Entity("BlogFullStack.Server.Models.StaticContent", b =>
                {
                    b.Property<int>("StaticContentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaticContentID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaticContentID");

                    b.ToTable("StaticContent");

                    b.HasData(
                        new
                        {
                            StaticContentID = 1,
                            Author = "Artyom",
                            Content = "We make stuff",
                            CreatedDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "About"
                        },
                        new
                        {
                            StaticContentID = 2,
                            Author = "Greg",
                            Content = "Everything you need to know",
                            CreatedDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Help"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
